Пермский филиал федерального государственного автономного образовательного учреждения высшего образования 
«Национальный исследовательский университет 
«Высшая школа экономики»

Факультет экономики, менеджмента и бизнес-информатики
Сидоров Арсений Алексеевич

     Разработка рекомендательной системы для подбора музыки по индивидуальным биометрическим данным и личным предпочтениям пользователя
Курсовая работа

студента образовательной программы «Программная инженерия»
по направлению подготовки 09.03.04 Программная инженерия









Доцент департамента экономики и финансов НИУ ВШЭ Пермь
____________________
С.П. Куликова

Пермь, 2021 год


Аннотация
     Разработка рекомендательной системы для подбора музыки по индивидуальным биометрическим данным и личным предпочтениям пользователя.
     Автор: Сидоров Арсений Алексеевич, студент третьего курса образовательной программы «Программная инженерия».
     Руководитель: Софья Петровна Куликова, доцент департамента экономики и финансов
     Данная курсовая работа посвящена разработке программы для создания персонализированных музыкальных подборок.
     Работа включает 43 страницы формата А4, из них 34 в основной части.
     Основная часть работы включает в себя 15 иллюстраций и 4 таблицы.
     Библиографический список состоит из 20 публикаций.
       
Оглавление
Введение	4
Список задач для достижения цели	4
Анализ предметной области	5
Обзор литературы	5
Мобильные приложения	10
Анализ аналоговых продуктов	11
Использование Spotify	14
Рекомендательная система	16
Spotify API	18
Проектирование	21
Работа мобильного приложения	23
Реализация программы	27
Платформа	27
Получение токена	27
Получение пользовательских данных	27
Созданные классы	28
Фрагменты	29
Активности приложения	31
Генерация плейлиста	32
Тестирование приложения	32
Заключение	33
Библиографический список	34
Приложение A – Чеклист юзабилити	36
Приложение E – Активность SettingsActivity	44
Приложение F – Активность MainActivity	45
Приложение G – Активность StartActivity	46

       
Введение
       Компании всё больше начинают понимать, что каждый человек уникален. Он имеет собственные интересы, привычки и распределение времени. И, адаптируясь под эти особенности, можно добиться большего количества кликов на рекламные баннеры, просмотров видео или же прослушивания музыкальных композиций. Персонализация контента с одной стороны повышает комфорт пользователя, с другой позволяет компаниям получить большую прибыль. Именно поэтому так важно в настоящее время собирать как можно больше статистики с людей.
       Целью командного проекта является разработка программного продукта, который будет считывать биометрические данные человека и обрабатывать музыкальные предпочтения и выводить персонализированную подборку песен. 
       Личной целью участника команды будет создание мобильного приложения в данной системе.
       Объект исследования - влияние биологических параметров на музыкальные предпочтения. Предмет исследования – рекомендательная система для подбора музыки по биологическим параметрам.
       Практической значимостью курсовой работы является конечный продукт, который позволит пользователям слушать персонализированный плейлист с композициями. 
Список задач для достижения цели
1. Анализ предметной области;
2. Постановка требований к мобильному приложению;
3. Проектирование мобильного приложения;
4. Разработка мобильного приложения на Android;
5. Тестирование мобильного приложения.
Анализ предметной области
       Первым этапом в разработке любого продукта становится анализ его назначения, области разработки, актуальности, а также постановка требований. В данной главе описана и проанализирована предметная область с предшествующим изучением назначения разрабатываемого мобильного приложения. Под понятием «предметная область» для данного продукта стоит рассмотреть несколько областей исследований. Во-первых, область исследований по взаимодействию между музыкой, поведенческой психологией человека и его биометрическими показателями. Во-вторых, область разработки мобильных приложений, а именно: различные техники разработки, изучение вопроса актуальности и потребительского спроса. И, наконец, анализ аналоговых мобильных приложений с точки зрения методов и технологий разработки. На основе проведенного анализа предполагается выявление функциональных требований.
Обзор литературы
       Рассматривая аналогичные решения от сервисов Apple Music и Spotify, можно заметить тенденцию в сфере технологий на повышение уровня коммуникации пользователя и продукта. Одним из признаков проявления такой тенденции является то, что во многих стриминговых сервисах для прослушивания музыки появляются разделы «под настроение». Так, предполагается, что человек может выбрать музыкальное сопровождение под свое эмоциональное состояние. С развитием и постепенной автоматизацией технологий этот процесс можно усовершенствовать до минимального участия пользователя. В разрабатываемом продукте предполагается автоматическое определение настроения человека посредством считывания его пульса.
       В процессе выявления требований к продукту, был проведен литературный обзор по вопросу наличия связи между музыкой, настроением человека и его пульсом. В целом, что теория наличия связи между эмоциональным состоянием человека, его пульсом и музыкой, которая может на это повлиять, не имеет доказательств опровержения или подтверждения.  Можно сказать, что конкретная область изучена не в достаточной степени, однако, многие специалисты находят этот подход как решение проблем в психологической терапии, детской психологии и в целом в медицине. [1] Некоторые музыканты и артисты убеждены, что изучение этого вопроса, поможет поднять коммуникацию между слушателем и исполнителем на новый уровень – уровень полного эмоционального погружения и понимания. [2]
       Вопрос того, что пульс человека может отражать его настроение неоднократно поднимался учеными в областях поведенческой психологии и медицине. Согласно исследованиям, эмоции	 являются важнейшим источником влияния на здоровье человек, так, эмоции могут не только отражать психическое состояние человека, но и иметь прочную связь с физическим состоянием человека [1]. Ученые, изучавшие болезнь Альцгеймера, обнаружили, что активность вегетативной нервной системы связана с обработкой эмоций и, следовательно, показатели вегетативной активности (такие, например, как пульс) можно использовать, чтобы сделать выводы о эмоциональных реакциях человека. [6] По этой причине можно предполагать наличие связи между эмоциями и основным биометрическим показателем организма человека – пульса. Исследования показали, что частота сердечных сокращений меняется в зависимости от настроения. В 1983 году Экманом был проведен эксперимент, который доказал, что физиологические сигналы имеют уникальную реакцию на разные эмоции. Частота сердечных сокращений значительно увеличивалась, когда люди были сердиты или напуганы, но снижалась значительно в состоянии отвращения. В рамках проекта команда опиралась на используемую в исследованиях теорию о базовых эмоциях человека: злость, страх, грусть, удивление, радость и отвращение – эмоции, которые принято считать врожденными и в некотором роде универсальными (согласно Экману, 1992) [3]. Также, Экман упоминает наличие врожденного «спокойного» эмоционального состояния человека, которое также рассматривалось в анализе исследований как один из влияющих факторов.
       В анализируемых исследованиях чаще применялся метод эмоциональной индукции (искусственно-вызванные эмоции человека), несмотря  эффективности данного метода [4]. В контексте такого метода принято называть следующие техники: 
1. Визуальная стимуляция для целенаправленного проявления определенных эмоций – статические изображения или видео; 
2. Автобиографическая отзывчивость – вызов эмоций посредством воспоминаний о прожитом эмоциональном опыте;
3. Ситуационная стимуляция – техника, при которой, помещая человека в определённую ситуацию, можно отследить его поведение и эмоции;
4. Образная стимуляция – человек, читая текст и представляя ассоциативные образы, выражает эмоции;
5. Музыкальная стимуляция – с помощью темпа, ритма музыки и наличия в ней лирики можно определить эмоциональный отклик человека; 
       В труде специалистов Университета Нового Южного Уэльса (Австралия) последний метод, по совместительству – наиболее подходящий для проекта и интересующий нас, отмечается как «не самый популярный» и не имеющий большого количества доказательных исследований. Тем не менее, в том же исследовании описано, что темп и лад музыки могут повлиять на эмоциональное состояние человека посредством его погружения в атмосферу, создаваемой музыкой. [5] В исследовании китайских ученых, эмоции определялись с помощью сенсора пульса на умном браслете, они отметили, что результаты проведенных ими экспериментов показали, что показали эффективность метода использования сигнала пульса для распознавания человеческих эмоций. Этот метод, по их словам, поможет продвинуть рынок приложений и разработку носимых устройств для мониторинга эмоционального настроения человека в различных состояниях. 
       Физиологическое воздействие музыки на человека основано на том, что нервная система и мускулатура обладают способностью усвоения ритма. Музыка, может учащать или снижать сердечный ритм, а может способствовать его поддержанию его значения). Бартлетт [8] совершил обзор исследований, посвященных изучению физиологических реакций человека на музыку, включая исследования с измерением пульса. Некоторые исследования из обзора Бартлетта, а также более позднего исследования из Китая [9] показали, что возбуждающая музыка увеличивает частоту сердечных сокращений, тогда как успокаивающая музыка снижает частоту сердцебиения. Однако были также исследования, в которых этот эффект не был обнаружен, или же в них освидетельствовалось обратное. Большая часть неоднозначности результатов исследований, скорее всего, связана с различных методологиями проведения эксперимента. Это связано с тем, что в ряде исследований музыка рассматривалась как инструмент стимуляции эмоций (что описывалось выше), в других же исследованиях изучалось то, какая музыка является наиболее подходящей под определенные эмоциональные состояния [10]. Из этого истекают три основных значения музыки в контексте проявления эмоций и настроения человека: 
1. Музыка как средство возникновения эмоций – рассматривается при целенаправленном желании человека проявить определенные эмоции. Например, при желании выплеснуть эмоции и энергию, люди чаще слушают энергичную рок-музыку. [11]
2. Музыка как средство поддержания эмоций – например, в нейтральном состоянии прослушивание той же сдержанной в плане инструментов музыки может снизить риск возникновения эмоционального возбуждения. Такое, к примеру, применяется в медицине и сфере оказания косметических услуг. [9]
3. Музыка как средство избавления от эмоций – например, при опечаленном эмоциональном состоянии можно поднять себе настроение энергичной музыкой с позитивным смысловым содержанием. [12]
       Однако, в большей части исследований, что были проанализированы и с которых собирались данные, говорится о субъективном восприятии музыки и индивидуальности цели ее прослушивания. Тем не менее, многие исследования склоняются к одним и тем же тенденциям связи музыки и настроения, несмотря на субъективность ее восприятия. Тенденции, выявленные в анализах связи музыки (конкретнее – музыкального жанра и характеристики темпа) и эмоционального состояния описаны в Таблице 1 (Согласно исследованию Гарридо и Шуберта [13]). 
        Таблица 1.1 Музыка и эмоциональное состояние
МузыкаЖанрЭмоциональное состояние Энергичная музыка Чаще: поп-музыка, рок-музыка
Реже: хип-хоп, классика, джаз1. Может спровоцировать: радость, удивление, страх
2. Может поддержать: радость, злость
3. Может избавить от: грусти, злости и отвращенияСпокойная музыкаЧаще: электронная музыка, хип-хоп, классика
Реже: рок-музыка, техно1. Может спровоцировать: спокойствие, радость
2. Может поддержать: спокойствие, радость
3. Может избавить от: злости, страха, радости, грусти и отвращения       Приведенные в таблице данные демонстрируют значение характеристик музыки в ее влиянии на эмоциональное состояние человека, тем не менее, стоит также учитывать наличие в музыке смысловой нагрузки (к примеру, любая инструментальная музыка не обладает таковым качеством), ее ритм, темп. Поэтому для разработки алгоритма машинного обучения, данные собирались таким образом, чтобы учесть все наиболее влиятельные характеристики музыкальных композиций. 
       Несмотря на то, что результаты исследований варьируются, а изучаемая теория не подтверждена еще ни одним доказательным методом, этот обзор показывает, что существует множество эффективно проведенных экспериментальных исследований, подтверждающих, что, исходя из того, какую музыку предположительно относят к определённому эмоциональному состоянию, и какой эффект она имеет на сердечном ритме. Таким образом, можно предположить наличие нелинейной связи: человек, пребывая в определённом настроении, может предпочитать определённую музыку, а чтобы определить его настроение автоматизировано можно посчитать его пульс. 
Мобильные приложения
       Принимая во внимание то, что продукт-приложение связано с сервисом Spotify и интегрирует данные с электронными часами, то с пользовательского взгляда наиболее удобным способом реализации будет именно мобильное приложение. Мобильное приложение считается более доступным с учетом используемого устройства – коммуникацию мобильного устройства и электронных часов пользователя выстроить проще, чем с десктопным или веб-приложением. [14]
       Мобильные приложения можно назвать быстрорастущей областью, которая плотно внедрилась в нашу повседневную жизнь. Каждый день способствуют ее развитию новые разработки, появление новых моделей устройств, имеющих как положительные, так и отрицательные последствия в целом. Первоначально использование мобильных приложений было распространено в рекламе, маркетинге и различных сферах обслуживания, позже оно разошлось на различные сектора, такие как медицина, социология, в целом, тенденции не оставляют без внимания ни одну отрасль и организацию. Экспоненциальный темп разработки приложений подтолкнула разработчиков к улучшению коммуникаций между пользователем и продуктом. Так как в разрабатываемом проекте предполагается автоматизация процесса понимания пользователя в эмоциональном плане, то мобильное приложение является наиболее подходящим вариантом реализации.  
       Мобильные приложения, как технология, предлагают лучшую персонализацию. Персонализация – это своего рода индивидуализированный подход коммуникации для пользователей в зависимости от их интересов, поведения при использовании и тому подобное. Мобильные приложения могут позволить пользователям с самого начала настраивать свои предпочтения, в зависимости от того, какие пользователи могут получать персонализированный контент. Приложения также могут отслеживать и наблюдать за взаимодействием пользователей и использовать их, чтобы предлагать пользователям индивидуальные рекомендации и обновления. [14] В рамках реализуемого продукта персонализация выстраивается на основе самой идеи создания плейлистов под настроение, ведь формироваться они будут из библиотеки Spotify пользователя, которая в том числе основана на его предпочтениях. 
Анализ аналоговых продуктов
       В анализ аналоговых продуктов включены мобильные приложения тех сервисов, в которых есть каталог музыкальных подборок под настроение пользователя. Приложения были проанализированы по чек-листу оценки юзабилити, представленном в Приложении А. Чек-лист составлен на основе тех пользовательских требований, что адресованы и разрабатываемому продукту, то есть: требования по функциональности работы с приложением, требования по юзабилити (удобство пользования) и требования к контенту (описания и характеристики плейлистов, а также их наполнение). 
       Первым анализировалось приложение Apple Music – одно из самых популярных приложений (и сервисов) для прослушивания музыки. В таблице 1 представлена раскладка мобильного приложения от Apple по экранам: вкладка «Обзор», раздел по настроению и окно плейлиста. 
        Таблица 1.2 Раскладка приложения Apple Music
Вкладка «Обзор» с каталогом плейлистовРаздел по настроению «Спокойствие»Плейлист «Только Йога» из раздела по настроению «Спокойствие»       
       Исходя из результатов проведенной оценки по чек-листу (см. Приложение 2), Apple Music, как приложение имеет следующие недостатки: во-первых, с точки зрения работы –возможность дать оценку плейлисту неочевидна, во-вторых, в плане контента – не указаны основные жанры (указан только один – основной) и описания разделов под настроение, а также нет возможности управлять аккаунтом и отредактировать свои предпочтения. С точки зрения юзабилити, ссылки на артистов неудобны для нажатия, так как можно промахнуться, также слишком большие обложки некоторых плейлистов и нет подсказки для пользователя на то, чтобы пролистать ниже. Можно сказать, что и обложки разделов по настроению и некоторых плейлистов не соответствуют содержанию.
       Говоря о работе рекомендательной системы, Apple Music просит пользователя на этапе регистрации указать свои предпочтения по жанрам, а также указать основных предпочитаемых артистов. Однако, ввести исполнителей, которые в списке не даны – нельзя. А также нельзя изменить предпочтения вручную после. 
       Многие также критикуют юзабилити приложения, особенно на устройствах линейки iPhone, дизайн сложен и труден для навигации. В одних разделах слишком много информации, а в других - недостаточно. А навигационная панель запутывает пользователя тем, что непонятно расставлены приоритеты, так центральный раздел – радио, который предлагает режим прослушивания, аналогичный привычному радио. 
       Следующее аналоговое приложение Яндекс Музыка – один из самых популярных музыкальных сервисов в России. [15] Приложения Яндекс Музыки предназначены для iOS, Android, Windows и Windows Phone. В таблице №2 приведена раскладка по экранам приложения. Яндекс музыка имеет много интересных функций, которые выделяют ее среди конкурентов, например: хранение истории прослушиваний (недоступно в мобильной версии), широкий выбор подкастов, а также распознавание треков по технологии Shazam1 . 
       Несмотря на то, что по чек-листу юзабилити (Приложение C) приложение собрало б?льшее количество баллов, чем аналоговый продукт от Apple, у Яндекс Музыки есть ряд своих недостатков. Во-первых, навигацию в приложении нельзя назвать самой «удобной», пользователя могут запутать понятия «волна» в момент прослушивания плейлиста. Также, в плане контент-содержания, не указаны основные артисты и жанры конкретного плейлиста. В целом стоит упомянуть то, что сервис достаточно строго локализован: музыкальная библиотека достаточно полна отечественными (и стран СНГ) исполнителями, однако, нельзя так сказать о зарубежных артистах. 
        Таблица 1.3 Раскладка приложения Яндекс Музыка
Воспроизведение плейлистаРаздел «Настроения»Плейлисты из раздела по настроению «Релакс»       
       Наконец, в анализ аналоговых продуктов был включен Spotify, являющийся на март 2021 года самым популярным сервисом для прослушивания музыки во всем мире. [16] Мобильное приложение сервиса предлагает пользователям большую музыкальную библиотеку (более 100 млн треков), индивидуальные плейлисты, сформированные по их предпочтениям, радио, а также другие возможности. В анализе юзабилити, приложение Spotify потеряло только один балл за отсутствие возможности отредактировать добавленный в личную библиотеку плейлист. Однако, это не отменяет того факта, что из всех рассмотренных продуктов Spotify может стать примером качественно и эффективно созданного мобильного приложения. Раскладка приложения по экранам представлена в таблице 3.  
        Таблица 1.4 Раскладка приложения Spotify
Воспроизведение плейлистаРаздел «Настроения»Окно формирование предпочтений       Подводя итоги проведенному анализу, можно сказать, что по оценке юзабилити, основными минусами аналоговых продуктов стали следующие пункты: 
1. Неудобная и запутанная навигация;
2. Не выдержанный стайлгайд;
3. Порой не указаны все потенциально интересные пользователю характеристики плейлиста: артисты, жанры и т. д.;
       Это значит, что в разрабатываемом продукте указанные недочеты аналогов должны быть учтены и исправлены. Так или иначе, хорошим примером может стать Spotify, который среди своих конкурентов отличается хорошими показателями юзабилити и в целом работой сервиса. 
       Как уже было сказано ранее, Spotify является основой для разрабатываемого продукта, ведь именно с помощью его API и интеграции с его библиотекой будет осуществлена работа основных функций приложения. 
Использование Spotify 
       На этапе разработки идеи проекта возник вопрос о том, к музыкальной библиотеке какого сервиса будет совершаться обращение по API. Было принято решение использовать Spotify API. Несмотря на то, что потенциальным недостатком разрабатываемого продукта можно назвать необходимое наличие аккаунта в другом приложении, его можно, скорее, назвать дополнением к работе сервиса, то есть решением существующей проблемы. Из проведенного анализа аналоговых решений стало ясно, что хоть Spotify и отличается своим индивидуальным подходом и анализом предпочтений пользователя, плейлисты из раздела «Настроение» никаким образом не персонализированы. Разрабатываемый продукт, как один из положительных эффектов, позволит оптимизировать процесс проведения коммуникации между пользователем и системой Spotify.
       Другим контраргументом к замечанию о необходимости наличия подписки на Spotify, может стать то, что экспоненциальный и стремительный рост Spotify предполагает его массовое распространение среди пользователей. Согласно данным на 2020 год, количество пользователей Spotify к третьему кварталу 2020 года выросло на млн по сравнению с тем же месяцем 2019 года. Количество подписок на сервис стремительно растет. На Рисунке 1 представлена диаграмма роста пользователей сервиса с 2015 года по 2020, опубликованная на платформе statista.com.

Рисунок 1.1 – Количество пользователей с платной подпиской на сервис Spotify c 2015 года по 2020
       Анализируя статистику, можно сказать, что Spotify на данный момент является самым популярным сервисом в мире, поэтому его использование и интеграция с ним не беспочвенны. К тому же, помимо всего каталога музыки, сервис может поделиться своими рекомендациями по каждому пользователю, что в разработке будет полезным, ведь рекомендательная система Spotify признается одной из самых качественных. [17]
Рекомендательная система
       Рекомендательная система основывается на определении предпочтений пользователя, а именно на трех типах модели: 
1. Модели совместной фильтрации, которые анализируют как поведение конкретного пользователя, так и поведение других. 
       Spotify не имеет системы оценки «звездочками», с помощью которой пользователи могут оценить свою музыку. Вместо этого данные Spotify представляют собой неявную обратную связь – в частности, поток счётчиков треков и дополнительных потоковых данных, например, сохранил ли пользователь трек в своем собственном списке воспроизведения или посетил страницу исполнителя после прослушивания песни. Для этого Spotify применяет вычисление матрицы с помощью библиотек python, в которой строки это все пользователи (которых больше 140 миллионов пользователей), а столбцы – все музыкальные композиции библиотеки. При пересечении проставляется 1, при его отсутствии (пользователь не прослушивает трек) – 0. После чего скрипты факторизуют матрицу математической формулой (Рисунок 1). 

Рисунок 1.2 – Формула обработки матрицы
       На выходе получается обработанная матрица (Рисунок 2) с векторами X – вектор пользователей, представляющий предпочтения пользователя, Y – вектор музыки, представляющие профиль одной песни (автор, жанр и другие данные). 
     
Рисунок 1.3 – Матрица Пользователь/Песня и вектора X – вектор пользователя, Y – вектор музыкальной композиции
       По сути, можно сказать, что в простом виде цифры ничего не представляют, однако, они имеют большой вес в сравнении. В данной модели выясняется у каких пользователей музыкальные вкусы аналогичны (сравнивая вектора), также как, и определяется по вектору Y у каких музыкальных композиций похожи профили. 
2. Модели обработки естественного языка (NLP), которые анализируют текст.
       Spotify сканирует Интернет в постоянном поиске сообщений в блогах и другого письменного текста о музыке, чтобы выяснить, что люди говорят о конкретных исполнителях и песнях – какие прилагательные и какой конкретный язык часто используются в отношении этих исполнителей и песен, а также какие другие исполнители и песни также обсуждаются вместе с ними. По сути, для каждой музыкальной композиции формируется лист «контекстных» терминов. 
3. Аудио-модели, которые сами анализируют необработанные2 еще пользователем аудиодорожки. 
       Третья модель не только повышает точность музыкальной рекомендательной системы, она также предполагает новые музыкальные композиции, не дискриминируя музыкальные композиции с малым количеством прослушиваний (взятых по первой модели) и имеющие небольшой терминологический список (по второй модели). Сверточные нейронные сети (CNN) – та же технология, которая используется в программном обеспечении для распознавания лиц. В Spotify после обработки музыкальной композиции, нейронная сеть выдает характеристику трека, включая как длительность, тональность, режим, темп и громкость. С помощью этой техники сервис получает набор похожих треков на основе прослушиваемых пользователем. [18]
       Так, ссылаясь на отзывы специалистов и пользователей в СМИ, рекомендательная система Spotify считается одной из лучших на данный момент. Учитывая то, что в процессе получения данных от Spotify приложение также коллекционирует данные по библиотеке пользователя (соответственно – по его предпочтениям), то подобранные плейлисты по настроению будут подходить пользователю в том числе и по его музыкальным преференциям. 
Spotify API
       Главными причинами, по которым было решено использовать API именно сервиса Spotify – это простота и очевидность в использовании, по сравнению с прочими стриминговыми сервисами и его популярность. В интернете имеется множество информации по поводу его использования и решения часто возникаемых проблем. Также Spotify – единственный сервис из представленных выше аналогов имеет официальный и поддерживаемый API. 
       Основываясь на простых принципах REST3, конечные точки Spotify веб-API возвращают метаданные JSON о музыкальных исполнителях, альбомах и треках непосредственно из каталога данных по музыке Spotify. Веб-API также обеспечивает доступ к пользовательским данным, таким как история воспроизведения и музыка, которые пользователь сохраняет в библиотеке «Ваша музыка», то есть его предпочтения. Такой доступ обеспечивается путем авторизации пользователем через Spotify. [19]
       API предоставляет собой набор конечных точек, каждая из которых имеет свой уникальный путь. Чтобы получить доступ к личным данным через веб-API, таким как: профили пользователей и истории воспроизведения, приложение должно получить разрешение пользователя на доступ к данным. Авторизация осуществляется через службу учетных записей Spotify.
Получение токена
       Для работы со Spotify API необходимо в первую очередь получить специальный ключ – токен, с помощью которого можно получать информацию с серверов сервиса. Процесс получения токена необходимо начать с регистрации приложения в дашборде на сайте Spotify, там необходимо ввести некоторые данные, необходимые для авторизации пользователей. Получить токен можно несколькими способами, называемыми в документации «Flow». Среди них есть метод, который позволяет получить токен, никак не взаимодействуя с пользовательскими данными. Для работы с токеном такого типа не нужна авторизация, но и нельзя будет получить личную информацию пользователя. К сожалению, выбор на использование нужного метода авторизации был ограничен одним вариантом, так библиотека для работы со Spotify на телефоне давала возможность получить токен только одним способом. 
       При данном подходе при авторизации получается токен, который ограничен по времени использования и его нужно обновлять. На рисунке выше показана последовательность действий, необходимых для получения токена. В первую очередь появляется окно авторизации, в котором будут перечислены все разрешения, которые требует приложение. Далее, вне зависимости от успешности авторизации произойдет перенаправление на страницу, заданную в дашборде, который упоминался ранее. При успешной авторизации приложение получает JSON файл с токеном и информацией о нем, включая продолжительность его жизни, тип и прочие параметры.
Проектирование
Компоненты системы

Рисунок 2.1 – схема работы рекомендательной системы 
       Ядром всей рекомендательной системы является алгоритм, на вход которого будут подаваться различные параметры композиций, а выходящими будут данные фильтрации, которые будут использоваться в дальнейшем для выбора нужных песен из аудиотеки пользователя. В базе данных будут храниться личные данные пользователя, такие как состояние здоровья, а также созданные подборки. Мобильное приложение является интерфейсом с пользователем системы, именно через него будут производиться отправка данных на сервер и дальнейшее получение подборки в библиотеке приложения. Для часов также будет разработано приложение, главной задачей которого будет являться отправка данных сердечного ритма в телефон.
Работа системы
       Работа в системе будет осуществляться одним пользователем приложения, без участия других акторов. В первую очередь понадобятся телефон и смарт-часы, на которые необходимо будет установить приложение. После успешного входа в свою учетную запись будет отправляться запрос на стриминговый сервис для получения публичной информации о пользователе, таких как имя, аватар и прочее. Затем пользователь генерирует новый плейлист, который будет основан на понравившихся композициях. Приложение со смарт-часов будет отправлять данные по пульсу на телефон. Затем с телефона на сервер будут передаваться:
1. Уникальный временный ключ пользователя;
2. Параметры, заданные пользователем;
3. Данные о сердечном ритме;
4. Строка, означающая тип отправляемого запроса.
       На сервере по переданному ключу будут получаться со стримингового сервиса понравившиеся композиции. У этих композиций будут в дальнейшем отбираться характеристики. Эти характеристики будут отправлены на вход алгоритм. После применения фильтров, полученных в ответ от алгоритма, в мобильное приложение будет отправляться новый созданный плейлист с отобранными композициями. Также для того, чтобы на телефоне не хранилась информация о пользователе, она будет содержаться в базе данных, также находящейся на сервере. В базе данных будут храниться личные параметры пользователя и список созданных плейлистов. БД была создана для того, чтобы в будущем при планах на модификацию мобильного приложения или переноса его на другую платформу это никак не коснулось самих хранимых данных и метода взаимодействия с сервером. 
       Приложение также будет связываться с сервером для обновления информации. К примеру, при удалении плейлиста пользователем или при установке отметки «нравится». 
Рисунок 2.2 – ERD диаграмма, описывающая работу мобильного приложения
Работа мобильного приложения
       Разработку структуры мобильного приложения необходимо начать с исправления недочетов конкурентных приложений с одной стороны, а с другой сделать дизайн максимально схожий с привычным для пользователей стриминговых сервисов. Во-первых, интерфейс программы должен быть максимально прост в использовании, не сильно нагружен элементами и функционал равномерно распределен по нескольким активностям. 
Рисунок 2.3 – ER-диаграмма, описывающая работу мобильного приложения
       На Рисунке 2.3 показана ER-диаграмма, описывающая зависимость и связь между сущностями в мобильном приложении. Главным объектом данной схемы является пользователь – центральная сущность, которая будет выполнять все функции приложения, включая управление приложением и оцениванием созданных плейлистов. Проведя небольшой анализ, наилучшим решением было принято разбиение экрана на три переключаемые активности.
1. Окно входа
       Первое, что будет встречать пользователя – окно авторизации через спотифай. На нем будет кратко описано, в чем заключается идея приложения и кнопка для вызова окна авторизации. При нажатии на кнопку с сервера Spotify на телефон будет загружаться форма, в которую будет необходимо ввести почту и пароль. Также в форме будут отображаться запрашиваемые с пользователя разрешения, такие как получение личной информации, информация о приватных и публичных композициях. При успешной авторизации пользователь переходит на специальную форму, в которой надо будет заполнить личные данные, включая пол, возраст и состояние здоровья. Эти параметры позже будут передаваться на сервер для работы алгоритма. 
2. Главное окно
       На главном окне будет располагаться все необходимое для запуска алгоритма на сервере. Большую часть экрана планируется занять большой кнопкой генерации плейлиста – отправка данных и получение с сервера новой подборки. На этом же экране будет располагаться небольшое описание, а также пользовательская настройка настроения, под которое планируется подбирать музыку.
3. Список плейлистов
       Как уже было сказано ранее, принято решение сделать структуру с тремя переключаемыми активностями. Одной из этих трех активностей будет являться главный экран, второй – список созданных алгоритмом плейлистов. При каждой загрузке данного окна, на сервер будет подаваться запрос на получение всех подборок, которые создал пользователь за процесс использования приложения. Каждый элемент списка будет иметь уникальный дизайн обложки, чтобы пользователь мог легко различить подборки друг от друга. Также на элементе будет располагаться краткая информация по артистам, присутствующим в подборке и список жанров, к которым можно отнести композиции. При нажатии на элемент на весь экран откроется окно, в котором будет выведен весь список композиций в данной подборке. Также на окне будет кнопка «перейти в спотифай», по нажатии на которой сгенерированный плейлист переносится в учетную запись пользователя.
4. Окно пользователя
       Третьей активностью является окно пользователя. После первой авторизации приложение отправит запрос на сервер для получения такой информации, как имя пользователя и его аватар, затем это будет отображаться на экране. Также на активности будет размещена заполненная ранее в форме информация о его здоровье и возрасте. На этой активности будет располагаться кнопка настройки, нажав на которую пользователь может заново заполнить форму. Для того, чтобы не сильно загружать прочие окна, под пользовательской информацией будет размещаться список избранных им плейлистов. По нажатии на плейлист будет также открываться окно со всеми данными.

Рисунок 2.4 – Схема приложения
Реализация программы
       В предыдущей главе был описан дизайн разрабатываемого приложения и его структура. В данной главе будет описана реализация программы, использованные технологии и паттерны разработки.  
Платформа
       Разработка приложения происходит под платформу Android, так как она наиболее распространенная в плане использования и, следовательно, сообщество Android уже смогла ответить на многие вопросы, касаемо разработки приложений, аналогичных данному проекту. В качестве среды разработки выбрана Android Studio, наиболее очевидное решение, предлагающее весь удобный функционал без установки каких-либо сторонних модулей. При создании нового проекта необходимо выбрать версию API, под которую будет вестись разработка. Был выбран API 26, что соответствует 8 версии операционной системы. 
Получение токена
       Авторизация на мобильных устройствах – процесс немного более усложнённый, нежели на сторонних веб-страницах. Поэтому компания Spotify для облегчения процесса аутентификации составила специальный материал [20] и разработала библиотеку. Для начала необходимо добавить файл библиотеки в нужную директорию и добавить зависимость в файл сборки. 
       В окне приложения открывается форма авторизации Spotify. Затем с сервера отправляется ответ – это JSON либо с токеном, либо с сообщением об ошибке и кодом ошибки.
Получение пользовательских данных
       Следующим этапом является получение пользовательских данных через выданный токен. Как было описано в предыдущей главе, на одном из экранов должны отображаться имя и аватар пользователя. Для того, чтобы загрузить данные, необходимо отправить GET запрос на URL https://api.spotify.com/v1/me. Также необходимо добавить три заголовка, один из них – тип отправляемого ответа, второй – получаемого и третий – это непосредственно токен.

Рисунок 3.1 – Отправка запроса
       Далее мы считываем полученный ответ и сериализуем его для дальнейшего использования в других активностях приложения. Стоит уточнить, что функция, содержащая код запроса должна запускаться в отдельном потоке, так как главный поток программы не должен ожидать результата ее выполнения.
Созданные классы
       Многие части интерфейса появляются в программе несколько раз. Один из таких случаев – обложка плейлиста, которая фигурирует в программе на двух экранах в сетке таблицы и списке. Для того, чтобы не копировать один и тот же код и разметку несколько раз разумным решением будет создание отдельного компонента. Компонент AlbumView состоит из разметки, на которую помещены такие элементы, как ImageView и TextView. Фон иконки – градиент в формате .png, который берется из ресурсов программы. Звезда в верхнем правом углу также является рисунком. Однако число на обложке – текст, на который наложен заранее загруженный в проект шрифт.

Рисунок 3.2 – Иконка плейлиста
       Класс RequestSender содержит все функции, относящиеся к отправке запросов на локальный сервер. Методы будут вызываться из классов активностей, подавая на вход строку с данными и на выходе структуру данных – экземпляр класса Playlist, в котором хранится информация по передаваемым композициям, включая идентификаторы для доступа к Spotify API. 
Фрагменты
       Приложение должно работать сразу с несколькими экранами, причем переключение между ними должно быть интуитивно понятным и простым. Таким образом, необходимо сделать так, чтобы пользователь мог переключаться между экранами как пролистыванием пальцем влево и вправо, так и нажатием на кнопки на специальном тулбаре. Проблема заключается в том, что популярные в использовании активности не подходят под заданные требования, ведь, во-первых, скроллинг невозможен, так как отдельная активность – это отдельное окно и плавный переход между ними невозможен и, во-вторых, на каждом из экранов должен находиться тулбар, который должен менять свое состояние в зависимости от открытого окна. К счастью, для такого случая можно использовать фрагменты – часть интерфейса, которая может использоваться повторно. 
       В первую очередь необходимо создать новую активность, которая будет содержать фрагменты, ведь активности они существовать не могут. На эту активность помещается тулбар и viewPager. Второе предназначается как контейнер для фрагментов. Таким образом, прописав в коде все необходимое, появилась возможность переключатся между тремя страницами пролистыванием пальца.
       Для удобства пользователя также необходимо продумать работу тулбара. По нажатии на одну из трех иконок мы будем вызывать функцию перелистывания у viewPager. Также в зависимости от того, какая страница открыта в текущий момент соответствующая иконка тулбара будет заменяться на другую, чтобы пользователь не запутался и всегда знал, на какой странице он находится. 
       Фрагменты практически во всем аналогичны активностям, за исключением того, что их нельзя вызвать обособленно, а также немного более усложненным процессом работы с элементами на разметке. 
1. MainFragment
       Первый и главный фрагмент экрана – MainFragment. Самым важным элементом на нем является кнопка генерации плейлиста. С помощью класса Socket на локальный сервер отправляется запрос – строка, которая будет содержать тип запроса и параметры, необходимые для работы алгоритма. 

Рисунок 3.3 – фрагмент MainFragment
2. PlaylistsFragment
       Слева от главного экрана находится фрагмент плейлистов. На нем помещен специальный контейнер RecyclerView, в который вкладываются элементы, состоящие из вышеупомянутого элемента AlbumView и текстовых полей с информацией по текущей записи. Эти записи будут загружаться с сервера каждый раз, когда запускается приложение.

Рисунок 3.4 – фрагмент PlaylistsFragment
3. UserFragment
       На данном фрагменте отображается пользовательская информация. Это имя и аватар, которые были получены в момент авторизации пользователя, а также его настройки. Ниже располагается кнопка выхода из аккаунта, в данном случае приложение перенаправляет пользователя на окно авторизации. Внизу экрана отображается список всех избранных плейлистов, у которых также присутствует функционал при нажатии, открывается то же окно, что и в списке всех плейлистов.

Рисунок 3.5 – Фрагмент UserFragment
Активности приложения
       Помимо трех фрагментов в программе существуют другие окна:
1. MainActivity – контейнер фрагментов;
2. PlaylistOpenedActivity – полная информация о плейлисте;
3. SettingsActivity – окно пользовательских настроек;
4. StartActivity – окно авторизации.
       Одно из окон – StartActivity, страница авторизации, появляющаяся перед пользователем в двух случаях, когда он первый раз заходит в нашу программу или когда он вышел из своего аккаунта. SettingsActivity– форма для заполнения, представляется перед экраном, когда пользователь авторизировался в первый раз и еще не заполнял свои данные ни разу. Также окно можно вызвать по нажатии на кнопку настроек на экране приложения. На форме расположены поля для ввода состояния здоровья, возраста и пола, все эти данные позже понадобятся для работы алгоритма. Активность MainActivity содержит тулбар и контейнер для фрагментов. PlaylistOpenedActivity открывается при нажатии на плейлист в списке всех плейлистов и в списке избранных. Он выводит подробную информацию о созданной записи и содержит кнопку перехода в Spotify. Изображения активностей находятся в приложениях E-G.
Генерация плейлиста
       Создание новой записи состоит из двух этапов. Первый, отправка запроса при нажатии на центральную кнопку. В этот момент в течение нескольких секунд начинает считываться пульс с часов и передаваться на телефон. Все собранные данные отправляются на сервер, где обрабатываются и обратно возвращается набор данных. Эти данные преобразуются в структуры, которые упоминались ранее. Следующим этапом является формирование плейлиста в аккаунте Spotify. Сначала создается запрос, который генерирует пустой плейлист в аккаунте Spotify пользователя, затем добавляет по переданным идентификаторам песни в этот плейлист. По нажатии по кнопке перехода на стриминговый сервис происходит перенаправление в приложение Spotify, если оно установлено, в ином случае на сайт.
Тестирование приложения
       Приложение, которое будет использоваться простым человеком, имеет смысл протестировать методом сценарного тестирования, чтобы рассмотреть все случаи использования программы. Результаты выполнения тестирования находятся в приложении H. 
Заключение
     По окончании разработки программы все поставленные цели были достигнуты. В приложении реализованы все функции, которые необходимо было реализовать.
     Результаты выполнения работы:
1. Проведен анализ предметной области;
2. Сформулированы требования к приложению;
3. Спроектирован макет приложения;
4. Разработано приложение под ОС Android;
5. Проведено сценарное тестирование.
     В итоге получилось приложение, которое может использоваться повседневно как ассистент в подборе композиций под текущее настроение. Также соблюдены все требования к курсовой работе за 3 курс.
     В дальнейшем планируется улучшить программу, добавив в нее полноценный проигрыватель для того, чтобы пользователь мог прослушивать композиции, не выходя из программы.
Библиографический список
1. Lesiuk T. The Effect of Preferred Music on Mood and Performance in a High-Cognitive Demand Occupation // Journal of Music Therapy, XLVII vol. 2 – 2010 год, стр. 137-154.
2. Lin Shu, Yang Yu, Wenzhuo Chen. Wearable Emotion Recognition Using Heart Rate Data from a Smart Bracelet // Sensors vol. 20 – 2020 год. 
3. Ekman, P. An argument for basic emotions (1992) // Cognition & Emotion, vol 6, – Январь 2008 года, стр. 169–200
4. Mockel M, Rocker L, Stork T, et al. Immediate physiological responses of healthy volunteers to different types of music: cardiovascular, hormonal and mental changes // Eur J Appl Physiol Occup Physiol 1994;68:451–9.
5. Siedlecka E. and Denson T. F. Experimental Methods for Inducing Basic Emotions: A Qualitative Review - School of Psychology, UNSW Sydney, Australia // Emotion review vol. 11, no. 1 – Январь 2019 года, стр. 87-97. 
6. Cuddy, L. L., Duffin, J.: Music, memory, and Alzheimer’s disease: is music recognition spared in dementia, and how can it be assessed? // Medical hypotheses, 64, 2 (2005) 229-235
7. Sharman, L., & Dingle, G. A. (2015). Extreme metal music and anger processing // Frontiers in Human Neuroscience, 9, 272. doi:10.3389/ fnhum.2015.00272
8. Bartlett, D. L.: Physiological responses to music and sound stimuli. In Hodges, D. A. (ed.) // Handbook of Music Psychology. IMR Press, San Antonio, Texas, USA (1996) 343-385
9. Fada PanID, Li Zhang.: The audio-visual integration effect on music emotion: Behavioral and physiological evidence // PLoS ONE 14(5), May 30, 2019
10.  Chen, L., Zhou, S., & Bryant, J. (2007). Temporal changes in mood repair through music consumption: Effects of mood, mood salience, and individual differences // Media Psychology, 9, 695–713.
11. Van den Tol, A., & Edwards, J. (2015). Listening to sad music in adverse situations: How music selection strategies relate to self-regulatory goals, listening effects, and mood enhancement // Psychology of Music, 43(4), 473–494.
12. Miranda, D., & Claes, M. (2008). Personality traits: Music preferences and depression in adolescence // International Journal of Adolescence and Youth, 14, 277–298.
13. Sandra Garridoa, Emery Schubert.: Musical prescriptions for mood improvement: An experimental study // The Arts in Psychotherapy 51 (2016) 46–53
14. Bellman, S., Potter, R.F., Treleaven-Hassard, S., Robinson, J.A., Varan, D., 2011. The effectiveness of Branded Mobile Phone Apps // J. Interactive Marketing 25, 191–200.
15. «Музыкальные стриминг-сервисы: рейтинг лучших, март 2021». Ax.Digital. 2 марта 2021 года. [Электронный ресурс] Режим доступа: https://ax.digital/music-streaming-tools/ (дата обращения 24.03.2021)
16. «Spotify Usage and Revenue Statistics (2021)». Business of Apps. 20 December 2018. [Электронный ресурс] (дата обращения 24.03.2021)
17. Javier P?erez-Marcos, Vivian L?opez, Recommender System based on Collaborative Filtering for Spotify’s Users, Advances in Intelligent Systems and Computing · June 2018.
18. «How Does Spotify Know You So Well? A software engineer explains the science behind personalized music recommendations ». Sophia Ciocca. // Medium.com, October 10th 2017, updated: November 13th 2019. 
19. «Web API» // Spotify.forDevelopers. [Электронный ресурс] Режим доступа: https://developer.spotify.com/ (дата обращения 26.03.2021)
20. «Android SDK Authentication Guide» // Spotify.forDevelopers.  [Электронный ресурс] Режим доступа: https://developer.spotify.com/documentation/android/guides/android-authentication/ (дата обращения 26.03.2021)

       
        
1 Пользователь Shazam использует микрофон устройства для записи фрагмента музыки. Затем программа сравнивает фрагмент с центральной базой данных и при успешном сопоставлении выдаёт информацию о треке. 

2 Необработанные – не прослушанные и профили которых еще не были посещены пользователем. 
3 Принципы REST включают в себя следующее:
1. единый интерфейс;
2. разграничение клиента и сервера;
3. нет сохранения состояния;
4. кэширование всегда разрешено;
5. многоуровневая система;
6. код предоставляется по запросу.

---------------

------------------------------------------------------------

---------------

------------------------------------------------------------

2


